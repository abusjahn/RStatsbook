# Simple test statistics

```{r}
pacman::p_load(conflicted,plotrix,tidyverse, wrappedtools,
               coin,ggsignif, patchwork, ggbeeswarm,
               flextable)
#conflicted)
# conflict_prefer("filter", "dplyr")
load("data/bookdata1.RData")

```

## Quantitative measures with Gaussian distribution

```{r}
ggplot(rawdata,aes(x=Sex,y=`Size (cm)`))+
  geom_beeswarm(size=3)+
  stat_summary(color="red",size=1.2,alpha=.7, 
               fun.data="mean_se",fun.args=list(mult=2))+
  ylab("size (mean \u00B1 2*SEM)")
by(data = rawdata$`Size (cm)`,INDICES = rawdata$Sex,
   FUN = meanse)

t.test(x = rawdata$`Size (cm)`[which(rawdata$Sex=="f")],
       y = rawdata$`Size (cm)`[which(rawdata$Sex=="m")])
(tOut<-t.test(rawdata$`Size (cm)`~rawdata$Sex))
tOut$p.value

# equal variances assumption?
(vartestOut<-var.test(rawdata$`Size (cm)`~rawdata$Sex))
(tOut<-t.test(rawdata$`Size (cm)`~rawdata$Sex,
              var.equal = vartestOut$p.value>.05))
(tOut<-
    t.test(rawdata$`Size (cm)`~rawdata$Sex,
           var.equal=var.test(
             rawdata$`Size (cm)`~rawdata$Sex)$p.value>.05))
t_var_test(data = rawdata,
           formula = "`Size (cm)`~Sex",
           cutoff = .1)


print(c(mean(rawdata$`sysBP V0`,na.rm=T),
        mean(rawdata$`sysBP V2`,na.rm=T)))

t.test(rawdata$`sysBP V0`,
       rawdata$`sysBP V2`,
       alternative="greater", # x>y
       paired=TRUE)  #pairwise t-test, within subject
t.test(rawdata$`sysBP V0`,
       rawdata$`sysBP V2`,
       # alternative="greater", # x>y
       paired=T)$p.value/2  #pairwise t-test, within subject

t.test(rawdata$`Size (cm)`,mu = 173)

groupvars <- ColSeeker(namepattern = c("Sex","Test"))

compare2numvars(data = rawdata,dep_vars = gaussvars$names,
                indep_var = "Sex",gaussian = T) |> 
  flextable() |> 
  flex2rmd()
compare2numvars(data = rawdata,dep_vars = gaussvars$names,
                indep_var = "Testmedication",gaussian = T) |> 
  flextable() |> 
  flex2rmd()

for(group_i in seq_len(groupvars$count)){
  resulttmp <- compare2numvars(data = rawdata,dep_vars = gaussvars$names,
                               indep_var = groupvars$names[group_i],gaussian = T)
  # print(resulttmp)
  flextable(resulttmp) |>
    flextable_to_rmd()
  cat("&nbsp;\n\n")
}
```

## Ordinal data

```{r}
ordvars$names
ggplot(rawdata,aes(`Iron Lab`))+
  geom_density()
by(data = rawdata[[ordvars$index[1]]], 
   INDICES = rawdata$Sex,FUN = median_quart)

ggplot(rawdata,aes(Sex,`Ptt Lab`))+
  geom_boxplot()
(uOut<-wilcox.test(
  rawdata[[ordvars$index[1]]]~rawdata$Sex,exact=F))
uOut$p.value
#  coin::wilcox_test
(uOut2<-wilcox_test(`Ptt Lab`~as.factor(Sex),
                    data=rawdata))
pvalue(uOut2) #no list-object, but methods to extract infos like p
wilcox.test(`Ptt Lab`~Sex,exact=F,correct=F,
            data=rawdata)
wilcox.test(x=rawdata$`sysBP V0`,y=rawdata$`sysBP V2`,
            exact=FALSE,
            correct=TRUE,paired=TRUE)

compare2numvars(data = rawdata,dep_vars = ordvars$names,
                indep_var = "Sex",gaussian = F) |> 
  flextable() |> 
  flex2rmd()
```

## Categorial data

```{r}
factvars$names
(crosstab<-table(rawdata$Sex,rawdata$Testmedication))
chisq.test(crosstab,simulate.p.value=T,B=10^5)  #empirical p-value

chisq.test(table(rawdata$Sex,rawdata$`NYHA V1`))  #based on table
chisq.test(x=rawdata$Sex,y=rawdata$`NYHA V1`,
           simulate.p.value=T,B=10^5)  #based on rawdata
fisher_out <- fisher.test(
  table(rawdata$Sex,rawdata$`NYHA V1`))  
fisher_out$p.value

(crosstab1<-table(rawdata$Sex,
                  rawdata$`Weight (kg)`<=
                    median(rawdata$`Weight (kg)`)))

(tabletestOut<-chisq.test(crosstab1,simulate.p.value=T,
                          B=10^5))
tabletestOut$p.value
tabletestOut$expected
tabletestOut$observed
tabletestOut$statistic
# if minimum(expected<5) then Fishers exact test
if(min(tabletestOut$expected)<5) {
  tabletestOut<-fisher.test(crosstab1)
}
tabletestOut$p.value 
# report_cat
groupvar <- "Testmedication"

compare2qualvars(rawdata,dep_vars = factvars$names[-1],
                 indep_var = groupvar,spacer = " ") |> 
  flextable() |> 
  flex2rmd()
```
