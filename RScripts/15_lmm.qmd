# Linear Mixed Models

Linear Mixed-Effects Models (LMMs) are statistical tools used to analyze data where observations are grouped or repeated, allowing researchers to model both **fixed effects** (effects for which an estimate/prediction and a p-value are of interest, which represent population-level averages, like treatment type) and **random effects** (effects for which usually no prediction or p-value is required, which account for variation and non-independence among the groups, like individual subjects, families, or experimental batches). In biology, LMMs are essential for analyzing longitudinal studies (e.g., tracking an animal's growth over time), repeated measure experiments (e.g., measuring gene expression in the same tissue across different conditions, or exploring experimental variation between technical replicates), and ecological studies (e.g., accounting for variation between different field sites or populations).

```{r}
pacman::p_load(conflicted,wrappedtools,car,broom,
               multcomp,tidyverse, DescTools, haven, 
               ggbeeswarm,
               lme4, nlme,merTools,
               easystats, patchwork,here)

conflicts_prefer(modelbased::standardize,
                 dplyr::filter,
                 dplyr::select)
```
## Import / Preparation

The data are the same as for the lm analyses. This time, passage effect is modeled as a random effect, as we are not interested in the effect of each passage, but want to account for the variation between passages. Future experiments are not expected to have the exact same passage differences. Passage numbers are arbitrary anyway. The numeric column Passage is mutated into a factor as Passage_F, this is necessary for group comparisons in ANOVA. 

```{r}
rawdata<-read_sav(file=here('Data/Zellbeads.sav')) |>
  as_factor() |>
  dplyr::select(-ZahlZellen) |>
  rename(Growth=Wachstum,Treatment=Bedingung) |>
  mutate(Passage_F=factor(Passage),
         Treatment=fct_recode(Treatment,
                              Control="Kontrolle"))

ggplot(rawdata,aes(Passage_F,Growth, color=Treatment))+
  stat_summary(fun.data = mean_se)+
  ylab("Growth (mean\u00b1SE)")
```

\newpage

## Random intercept model
### Package nlme
```{r}
lme_out <- nlme::lme(Growth~Treatment, data=rawdata,
                     random = ~1|Passage_F) # RIntercept
lme_out
Anova(lme_out)
```

### Package lme4
```{r}
lmer_out <- lme4::lmer(Growth~Treatment+(1|Passage_F),
                       data=rawdata)

lmer_out
Anova(lmer_out)
```

\newpage

### Visualization of fixed and random effects
Parameters can be conveniently extracted with `model_parameters()`. The intercept is the mean of the reference group (Control), the slopes are the differences to the reference group. The random effects are deviations from the overall intercept for each passage. The overall intercept and slope are shown as dashed line, the passage-specific intercepts with identical slopes as colored lines. 

```{r}
(lmer_out_param <- model_parameters(lmer_out, group_level = T))

intercept_all <- lmer_out_param$Coefficient[1]
slope_Ang <- lmer_out_param$Coefficient[2]
slope_What <- lmer_out_param$Coefficient[3]
plotdata <- tibble(
  Passage_F=lmer_out_param$Level[-(1:3)],
  intercept=lmer_out_param$Coefficient[-(1:3)]+
    intercept_all)


p1 <- rawdata |>
  filter(Treatment!="Whatever") |>
  mutate(Treatment_n=case_match(Treatment, "Control" ~ 0,
                                .default =1)) |>
  ggplot(aes(Treatment_n, Growth, color=Passage_F))+
  geom_beeswarm(alpha=.2, dodge.width = .2)+
  geom_abline(data = plotdata,
              aes(color=Passage_F,
                  intercept=intercept,
                  slope=slope_Ang))+
  geom_abline(color='black',linetype=3,
              aes(intercept=intercept_all,
                  slope=slope_Ang))+
  scale_x_continuous(breaks=0:1,
                     limits = c(-.5,1.5),
                     labels=c("Control","AngII"),
                     minor_breaks = NULL)

p2  <- rawdata |>
  filter(Treatment!="AngII") |>
  mutate(Treatment_n=case_match(Treatment, "Control" ~ 0,
                                .default =1)) |>
  ggplot(aes(Treatment_n, Growth, color=Passage_F))+
  geom_beeswarm(alpha=.2, dodge.width = .2)+
  geom_abline(data = plotdata,
              aes(color=Passage_F,
                  intercept=intercept,
                  slope=slope_What))+
  geom_abline(color='black',linetype=3,
              aes(intercept=intercept_all,
                  slope=slope_What))+
  scale_x_continuous(breaks=0:1,
                     limits = c(-.5,1.5),
                     labels=c("Control","Whatever"),
                     minor_breaks = NULL)

p1/p2+plot_layout(guides = "collect")
```
The regression lines for the passages are parallel but shifted, reflecting the random intercept model.

\newpage

## Random slope model

```{r}
lmer_out2 <- lme4::lmer(Growth~Treatment+
                          (1+Treatment|Passage_F),
                        data=rawdata,
                        REML=FALSE)
lmer_out2
Anova(lmer_out2)
```

### Visualization of fixed and random effects

```{r}
(lmer_out_param2 <- model_parameters(lmer_out2, group_level = T))
intercept_all <- lmer_out_param2$Coefficient[1]
slope_Ang <- lmer_out_param2$Coefficient[2]
slope_What <- lmer_out_param2$Coefficient[3]
interceptdata <-
  tibble(Passage_F=lmer_out_param2$Level[4:9],
         intercept=lmer_out_param2$Coefficient[4:9]+intercept_all,
         slopeAng=lmer_out_param2$Coefficient[10:15]+
           slope_Ang,
         slopeWhat=lmer_out_param2$Coefficient[16:21]+
           slope_What)

p1 <- rawdata |>
  filter(Treatment!="Whatever") |>
  mutate(Treatment_n=case_match(Treatment, "Control" ~ 0,
                                .default =1)) |>
  ggplot(aes(Treatment_n, Growth, color=Passage_F))+
  geom_beeswarm(alpha=.2, dodge.width = .2)+
  geom_abline(data = interceptdata,
              aes(color=Passage_F,
                  intercept=intercept,
                  slope=slopeAng))+
  geom_abline(color='black',
              aes(intercept=intercept_all,
                  slope=slope_Ang))+
  scale_x_continuous(breaks=0:1,
                     limits = c(-.5,1.5),
                     labels=c("Control","AngII"))

p2  <- rawdata |>
  filter(Treatment!="AngII") |>
  mutate(Treatment_n=case_match(Treatment, "Control" ~ 0,
                                .default =1)) |>
  ggplot(aes(Treatment_n, Growth, color=Passage_F))+
  geom_beeswarm(alpha=.2, dodge.width = .2)+
  geom_abline(data = interceptdata,
              aes(color=Passage_F,
                  intercept=intercept,
                  slope=slopeWhat))+
  geom_abline(color='black',
              aes(intercept=intercept_all,
                  slope=slope_What))+
  scale_x_continuous(breaks=0:1,
                     limits = c(-.5,1.5),
                     labels=c("Control","Whatever"))

p1/p2+plot_layout(guides = "collect")
```

This time, the Passage-related lines have individual intercepts AND slopes, indicating that the treatment effects are not exactly identical within the passages.
